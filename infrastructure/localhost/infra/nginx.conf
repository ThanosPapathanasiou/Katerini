events { }

http {

    server {
        listen 80;
        server_name website.katerini.local;

        access_log /dev/stdout;
        error_log /dev/stderr;

        location / {
            # use the docker resolver
            # resolver 127.0.0.11 valid=5s;

            # this trick of setting a variable and then using it on proxy pass
            # is needed because if we do proxy_pass http://katerini.website:15000;
            # and the upstream system is not up and running then nginx will fail to start.
            # By setting this variable and using it, nginx will start but return a 502 
            set $upstream_foo http://katerini.website:15000;
            proxy_pass $upstream_foo;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;
        server_name messaging.katerini.local;

        location / {
            proxy_pass http://rabbitmq:15672;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    
    server {
        listen 80;
        server_name logs.katerini.local;

        location / {
            proxy_pass http://seq:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    
    server {
        listen 80;
        server_name caching.katerini.local;

        location / {
            proxy_pass http://redis-webui:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}